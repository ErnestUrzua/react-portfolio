{"version":3,"sources":["components/Navbar/index.js","components/Cards/index.js","pages/Main.js","components/Footer/index.js","pages/About.js","components/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Cards","props","src","image","onClick","handleClick","alt","name","id","href","link","target","rel","description","Main","state","Img","handleItemClick","event","console","log","newState","setState","this","projects","map","item","key","Component","Footer","About","assets","Wrapper","App","exact","path","component","window","location","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70652b47.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    \n      <nav className=\"navbar navbar-expand-sm navbar-dark green orange-text\">\n        <div className=\"navbar-brand orange-text\">\n          Ernest Urzua<span className=\"large\">Portfolio</span>\n        </div>\n        <span>\n        <ul className=\"navbar-nav\">\n            <li className=\"nav-link\">\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n            <li className=\"nav-link\">\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li className=\"nav-link\">\n              <Link to=\"/resume\">Resume</Link>\n            </li>\n          </ul>\n          </span>\n\n      </nav>\n   \n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Cards(props) {\n\n\n    return (\n        <div className=\"card transition1 text-center\" >\n            <img src={props.image} className=\"card-img\" onClick={props.handleClick} alt={props.name} id={props.id}></img>\n            <div className=\"card-img-overlay\">\n            <a className=\"card-title\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">{props.name}</a>\n            </div>\n            <p className=\"card-text text-center\">{props.description}</p>\n        </div>\n    );\n}\n\nexport default Cards;","import React, { Component } from \"react\";\nimport \"./main.css\";\nimport Img from \"../db.json\";\nimport Cards from \"../components/Cards\";\n\n\n\nclass Main extends Component {\n\n\n   //holds our game information\n   state = {\n    Img //array of all imgs from json file\n  };\n\n  //handles the click on the pictures\n  handleItemClick = event => {\n    const id = event.target.id;//select the id of the picture clicked\n    console.log(\"Clicked ID:\" + id);\n    const newState = { ...this.state }; //temp variable to hold our state info\n\n    //update state variables\n    this.setState(newState);\n    console.log(\"setting the newState\");\n  }\n\n\n  render() {\n    return (\n      <div>\n        {/* container to hold project cards */}\n        <div className=\"container-fluid p-2 col-12 justify-content-center white\">\n          {\n            /* Loop through all the items in the static list  */\n            this.state.Img.projects.map(item => (\n              <Cards\n                key={item.id}\n                id={item.id}\n                name={item.name}\n                handleClick={this.handleItemClick}\n                image={item.image}\n                link = {item.link}\n                description = {item.description}\n              />\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer green orange-text\">\n      <span>ernestUrzua Portfolio 2020</span>\n      <div className=\"footer-icons\">\n\n        <a href=\"#\"><i className=\"fa fa-facebook\"></i></a>\n        <a href=\"#\"><i className=\"fa fa-twitter\"></i></a>\n        <a href=\"https://www.linkedin.com/in/ernesturzua/\"><i className=\"fa fa-linkedin\"></i></a>\n        <a href=\"https://github.com/ErnestUrzua\"><i className=\"fa fa-github\"></i></a>\n\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n\n","import React, { Component } from \"react\";\nimport \"./about.css\";\nimport Img from \"../db.json\";\nimport Cards from \"../components/Cards\";\n\n\n\n\nclass About extends Component {\n\n  //holds our game information\n  state = {\n    Img //array of all imgs from json file\n  };\n\n  //handles the click on the pictures\n  handleItemClick = event => {\n    const id = event.target.id;//select the id of the picture clicked\n    console.log(\"Clicked ID:\" + id);\n    const newState = { ...this.state }; //temp variable to hold our state info\n\n    //update state variables\n    this.setState(newState);\n    console.log(\"setting the newState\");\n  }\n\n\n  render() {\n    return (\n      <div>\n        {/* container to hold about me cards */}\n        <div className=\"container p-2 col-12 white\">\n        \n          <img className=\"image\" src={this.state.Img.assets[0].image} ></img>\n         \n            <div className=\"container w-50 orange-text\">\n              <p>My passion for creation first started in Animation\n              and art. Through the process of creating\n              I realized that designing, building, and iterating is something that is common amongst many\n              disciplines, more specifically software development.\n              This shared creation process has naturally led me to software development and its fascinating\n              power.\n              Joining both my passions of art and technology only expands my skill set to have a\n            unique perspective on creation.</p>\n            </div>\n        </div>\n\n        </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Main from \"./pages/Main\";\nimport Footer from './components/Footer';\nimport About from \"./pages/About\";\nimport Wrapper from \"./components/Wrapper\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Wrapper>\n          <Route exact path=\"/\" component={Main} /><Redirect to=\"/projects\" />\n          <Route exact path=\"/projects\" component={Main} />\n          <Route exact path=\"/about\" component={About} />\n          <Route path='/resume' component={() => window.location = 'https://docs.google.com/document/d/1sw88-b4F8rUdlXCVsSD_dUfwirS9NjuOvVSu7f1WUTY/edit?usp=sharing'} />\n          {/* <Route path='/resume' component={() => <a href= 'https://docs.google.com/document/d/1sw88-b4F8rUdlXCVsSD_dUfwirS9NjuOvVSu7f1WUTY/edit?usp=sharing' target=\"_blank\"></a>}/> */}\n          {/* <Route a href=\"https://docs.google.com/document/d/1sw88-b4F8rUdlXCVsSD_dUfwirS9NjuOvVSu7f1WUTY/edit?usp=sharing\" target=\"_blank\"/><a/> */}\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}